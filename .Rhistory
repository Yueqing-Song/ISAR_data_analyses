area <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fragment_area.csv",row.names = 1)
diversity <- read.csv(file = "F:\\ISAR_data_analyses\\diversity&soil&spatial_indices\\rarefied_diversity.csv")
all_data <- cbind(area ,diversity)
View(all_data)
### log_Stotal ~ log(area) ###
fit_plant_Srare<-lm(plant_Srare ~log(area),data=all_data)
summary(fit_log_Plant_Stotal)
### log_Stotal ~ log(area) ###
fit_plant_Srare<-lm(plant_Srare ~log(area),data=all_data)
summary(fit_plant_Srare)
fit_fungal_Srare <-lm(fungal_Srare ~log(area),data=all_data)
summary(fit_fungal_Srare )
fit_bacterial_Srare <-lm(bacterial_Srare ~log(area),data=all_data)
summary(fit_bacterial_Srare )
### log_alpha ~ log(area) ###
fit_rarefied_plant_Stotal <-lm(rarefied_plant_Stotal ~log(area),data=all_data)
summary(fit_rarefied_plant_Stotal )
fit_rarefied_plant_alpha <-lm(rarefied_plant_alpha ~log(area),data=all_data)
summary(fit_rarefied_plant_alpha)
fit_rarefied_plant_beta<-lm(rarefied_plant_beta ~log(area),data=all_data)
summary(fit_rarefied_plant_beta )
### beta ~ log(area) ###
fit_rarefied_fungal_Stotal <-lm(rarefied_fungal_Stotal ~log(area),data=all_data)
summary(fit_rarefied_fungal_Stotal )
fit_rarefied_fungal_alpha <-lm(rarefied_fungal_alpha ~log(area),data=all_data)
summary(fit_rarefied_fungal_alpha)
fit_rarefied_fungal_beta<-lm(rarefied_fungal_beta ~log(area),data=all_data)
summary(fit_rarefied_fungal_beta )
### beta ~ log(area) ###
fit_rarefied_bacterial_Stotal <-lm(rarefied_bacterial_Stotal ~log(area),data=all_data)
summary(fit_rarefied_bacterial_Stotal )
fit_rarefied_bacterial_alpha <-lm(rarefied_bacterial_alpha ~log(area),data=all_data)
summary(fit_rarefied_bacterial_alpha)
fit_rarefied_bacterial_beta<-lm(rarefied_bacterial_beta ~log(area),data=all_data)
summary(fit_rarefied_bacterial_beta )
library(iNEXT)
install.packages("iNEXT")
library(iNEXT)
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
library(vegan)
library(plyr)
library(reshape2)
#install.packages("iNEXT")
library(iNEXT)
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
Fungal_Stotal_tab <- Fungal_table    %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
library(dplyr)
#install.packages("iNEXT")
library(iNEXT)
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
Fungal_Stotal_tab <- Fungal_table    %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Fungal_Stotal_tab) <- "data.frame"
Bacterial_Stotal_tab <- Bacterial_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Bacterial_Stotal_tab) <- "data.frame"
ChaoRichness(spider$Girdled, datatype="abundance")
ChaoRichness(Plant_Stotal_tab, datatype="abundance")
Plant_Stotal_tab <- t(Plant_Stotal_tab)
View(Plant_Stotal_tab)
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
View(Plant_Stotal_tab)
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
View(Plant_table)
View(Plant_Stotal_tab)
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
View(Plant_Stotal_tab)
Plant_Stotal_tab <- Plant_Stotal_tab [,-1]
View(Plant_Stotal_tab)
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
Plant_Stotal_tab <- Plant_Stotal_tab [,-1]
Fungal_Stotal_tab <- Fungal_table    %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Fungal_Stotal_tab) <- "data.frame"
Fungal_Stotal_tab <- Fungal_Stotal_tab [,-1]
Bacterial_Stotal_tab <- Bacterial_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Bacterial_Stotal_tab) <- "data.frame"
Bacterial_Stotal_tab <- Bacterial_Stotal_tab [,-1]
Plant_Stotal_tab <- t(Plant_Stotal_tab)
ChaoRichness(Plant_Stotal_tab, datatype="abundance")
Plant_Stotal_tab <- t(Plant_Stotal_tab)
ChaoRichness(Plant_Stotal_tab, datatype="abundance")
Fungal_Stotal_tab <- t(Fungal_Stotal_tab)
Plant_Stotal_tab <- t(Plant_Stotal_tab)
ChaoRichness(Plant_Stotal_tab, datatype="abundance")
library(vegan)
library(plyr)
library(reshape2)
library(dplyr)
#install.packages("iNEXT")
library(iNEXT)
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
Plant_Stotal_tab <- Plant_Stotal_tab [,-1]
Fungal_Stotal_tab <- Fungal_table    %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Fungal_Stotal_tab) <- "data.frame"
Fungal_Stotal_tab <- Fungal_Stotal_tab [,-1]
Bacterial_Stotal_tab <- Bacterial_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Bacterial_Stotal_tab) <- "data.frame"
Bacterial_Stotal_tab <- Bacterial_Stotal_tab [,-1]
Plant_Stotal_tab <- t(Plant_Stotal_tab)
ChaoRichness(Plant_Stotal_tab, datatype="abundance")
Fungal_Stotal_tab <- t(Fungal_Stotal_tab)
ChaoRichness(Fungal_Stotal_tab, datatype="abundance")
Bacterial_Stotal_tab <- t(Bacterial_Stotal_tab)
ChaoRichness(Bacterial_Stotal_tab, datatype="abundance")
# calculated Stotal as Chao1 estimator
set.seed(1)
Plant_Stotal <- estimateR(Plant_Stotal_tab)[2, ]
Fungal_Stotal <- estimateR(Fungal_Stotal_tab)[2, ]
Bacterial_Stotal <- estimateR(Bacterial_Stotal_tab)[2, ]
Stotal <- data.frame(cbind(Plant_Stotal,Fungal_Stotal,Bacterial_Stotal))
# Read data file
Plant_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Plant_table.csv",row.names = 1)
Fungal_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Fungal_OTU_table.csv",row.names = 1)
Bacterial_table <- read.csv(file = "F:\\ISAR_data_analyses\\datasets\\Bacterial_OTU_table.csv",row.names = 1)
Fragment <- Plant_table[,1]
# site by species table at the gamma scale
Plant_Stotal_tab <- Plant_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Plant_Stotal_tab) <- "data.frame"
Plant_Stotal_tab <- Plant_Stotal_tab [,-1]
Fungal_Stotal_tab <- Fungal_table    %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Fungal_Stotal_tab) <- "data.frame"
Fungal_Stotal_tab <- Fungal_Stotal_tab [,-1]
Bacterial_Stotal_tab <- Bacterial_table   %>%
group_by(Fragment) %>%
summarise_all(sum) %>%
ungroup()
class(Bacterial_Stotal_tab) <- "data.frame"
Bacterial_Stotal_tab <- Bacterial_Stotal_tab [,-1]
Plant_Stotal_tab1 <- t(Plant_Stotal_tab)
ChaoRichness(Plant_Stotal_tab1, datatype="abundance")
Fungal_Stotal_tab1 <- t(Fungal_Stotal_tab)
ChaoRichness(Fungal_Stotal_tab1, datatype="abundance")
Bacterial_Stotal_tab1 <- t(Bacterial_Stotal_tab)
ChaoRichness(Bacterial_Stotal_tab1, datatype="abundance")
# calculated Stotal as Chao1 estimator
set.seed(1)
Plant_Stotal <- estimateR(Plant_Stotal_tab)[2, ]
Fungal_Stotal <- estimateR(Fungal_Stotal_tab)[2, ]
Bacterial_Stotal <- estimateR(Bacterial_Stotal_tab)[2, ]
Stotal <- data.frame(cbind(Plant_Stotal,Fungal_Stotal,Bacterial_Stotal))
Stotal
data <- Plant_Stotal_tab # load your data
# Define a function to calculate the Chao1 estimator for a sample
chao1_func <- function(x) {
chao1(as.integer(x), datatype = "freq")$chao1
}
# Use bootstrapping to estimate the variance of the Chao1 estimator
set.seed(123) # set a random seed for reproducibility
boot_chao1 <- boot(data, chao1_func, R = 1000) # perform 1000 bootstrap replicates
install.packages("boot")
library(boot)
library(vegan)
data <- Plant_Stotal_tab # load your data
# Define a function to calculate the Chao1 estimator for a sample
chao1_func <- function(x) {
chao1(as.integer(x), datatype = "freq")$chao1
}
# Use bootstrapping to estimate the variance of the Chao1 estimator
set.seed(123) # set a random seed for reproducibility
boot_chao1 <- boot(data, chao1_func, R = 1000) # perform 1000 bootstrap replicates
View(data)
# Calculate the estimated number of unseen species and its variance
est_chao1 <- chao1_func(data) # calculate the Chao1 estimator for the original data
var_chao1 <- var(boot_chao1$t) # calculate the variance of the Chao1 estimator
# Calculate a 95% confidence interval for the estimated number of unseen species
conf_int <- quantile(boot_chao1$t, c(0.025, 0.975))
# Print the results
cat("Estimated number of unseen species:", est_chao1, "\n")
cat("Variance of the Chao1 estimator:", var_chao1, "\n")
cat("95% confidence interval:", conf_int[1], "-", conf_int[2], "\n")
install.packages("iNEXT.3D")
install.packages('devtools')
install.packages("devtools")
data("dunes")
library(iNEXT.3D)
install.packages("iNEXT.3D")
install.packages("C:/Users/SYQ/Downloads/iNEXT.3D-master.zip", repos = NULL, type = "win.binary")
library(iNEXT.3D)
library(iNEXT.3D-master)
install.packages('iNEXT.3D', dependencies=TRUE, repos='https://github.com/KaiHsiangHu/iNEXT.3D')
setwd("F:/ISAR_data_analyses") # Project folder location
work_dir <- getwd() # Set working directory
library(iNEXT)
library(vegan)
library(tidyverse) # select function
library(plyr) # ddply function
library(reshape2) # melt function
# Read data file
Plant_table <- read.csv(file = "datasets/Plant_table.csv",row.names = 1)
